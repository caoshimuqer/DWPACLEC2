try
{
   string sqlSelStatement = "SELECT * FROM employee";
   mysqlStatus = mysql_query( MySQLConnection, sqlSelStatement.c_str() );

   if (mysqlStatus)
      throw FFError( (char*)mysql_error(MySQLConnection) );
   else
      mysqlResult = mysql_store_result(MySQLConnection); // Get the Result Set

   if (mysqlResult)  // there are rows
   {
      // # of rows in the result set
      numRows = mysql_num_rows(mysqlResult);

      // # of Columns (mFields) in the latest results set
      numFields = mysql_field_count(MySQLConnection);

      // Returns the number of columns in a result set specified
      numFields = mysql_num_fields(mysqlResult);

      printf("Number of rows=%u  Number of fields=%u \n",numRows,numFields);
   }
   else
   {
      printf("Result set is empty");
   }

   // Print column headers

   mysqlFields = mysql_fetch_fields(mysqlResult);

   for(int jj=0; jj < numFields; jj++)
   {
      printf("%s\t",mysqlFields[jj].name);
   }
   printf("\n");

   // print query results

   while(mysqlRow = mysql_fetch_row(mysqlResult)) // row pointer in the result set
   {
      for(int ii=0; ii < numFields; ii++)
      {
         printf("%s\t", mysqlRow[ii] ? mysqlRow[ii] : "NULL");  // Not NULL then print
      }
      printf("\n");
   }

   if(mysqlResult)
   {
      mysql_free_result(mysqlResult);
      mysqlResult = NULL;
   }
}
catch ( FFError e )
{
   printf("%s\n",e.Label.c_str());
   mysql_close(MySQLConnection);
   return 1;
}

// --------------------------------------------------------------------
// Close datbase connection

mysql_close(MySQLConnection);

return 0;
